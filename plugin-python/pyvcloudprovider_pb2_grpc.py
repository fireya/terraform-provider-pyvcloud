# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pyvcloudprovider_pb2 as pyvcloudprovider__pb2


class PyVcloudProviderStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/pyvcloudprovider.PyVcloudProvider/Login',
        request_serializer=pyvcloudprovider__pb2.TenantCredentials.SerializeToString,
        response_deserializer=pyvcloudprovider__pb2.LoginResult.FromString,
        )


class PyVcloudProviderServicer(object):
  """Interface exported by the server.
  """

  def Login(self, request, context):
    """Tenant Loging to VCD  
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PyVcloudProviderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=pyvcloudprovider__pb2.TenantCredentials.FromString,
          response_serializer=pyvcloudprovider__pb2.LoginResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pyvcloudprovider.PyVcloudProvider', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
